# Scrap endpoints to be added to openapi.yaml

# Add to paths section:
  /scraps:
    post:
      tags:
        - Scraps
      summary: Create a new scrap
      operationId: createScrap
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScrapRequest'
      responses:
        '201':
          description: Scrap created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scrap'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '400':
          $ref: '#/components/responses/BadRequest'

    get:
      tags:
        - Scraps
      summary: Get user's scraps
      operationId: getScraps
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of scraps
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scrap'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /scraps/{id}:
    get:
      tags:
        - Scraps
      summary: Get scrap with posts
      operationId: getScrap
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Scrap with posts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScrapWithPosts'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      tags:
        - Scraps
      summary: Update scrap
      operationId: updateScrap
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScrapRequest'
      responses:
        '200':
          description: Scrap updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scrap'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      tags:
        - Scraps
      summary: Delete scrap
      operationId: deleteScrap
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Scrap deleted
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /scraps/{id}/posts:
    get:
      tags:
        - Scraps
      summary: Get scrap posts
      operationId: getScrapPosts
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: List of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScrapPost'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    post:
      tags:
        - Scraps
      summary: Add post to scrap
      operationId: createScrapPost
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScrapPostRequest'
      responses:
        '201':
          description: Post created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScrapPost'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /scraps/{id}/posts/{postId}:
    put:
      tags:
        - Scraps
      summary: Update scrap post
      operationId: updateScrapPost
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: postId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScrapPostRequest'
      responses:
        '200':
          description: Post updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScrapPost'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      tags:
        - Scraps
      summary: Delete scrap post
      operationId: deleteScrapPost
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: postId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Post deleted
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

# Add to components/schemas section:
    Scrap:
      type: object
      required:
        - id
        - owner_id
        - title
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
        owner_id:
          type: string
          format: uuid
        title:
          type: string
        file_path:
          type: string
          nullable: true
        parent_id:
          type: string
          format: uuid
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        last_edited_by:
          type: string
          format: uuid
          nullable: true
        last_edited_at:
          type: string
          format: date-time
          nullable: true

    ScrapPost:
      type: object
      required:
        - id
        - author_id
        - content
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
        author_id:
          type: string
          format: uuid
        author_name:
          type: string
          nullable: true
        content:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    ScrapWithPosts:
      type: object
      required:
        - scrap
        - posts
      properties:
        scrap:
          $ref: '#/components/schemas/Scrap'
        posts:
          type: array
          items:
            $ref: '#/components/schemas/ScrapPost'

    CreateScrapRequest:
      type: object
      required:
        - title
      properties:
        title:
          type: string
        parent_id:
          type: string
          format: uuid
          nullable: true

    UpdateScrapRequest:
      type: object
      properties:
        title:
          type: string

    CreateScrapPostRequest:
      type: object
      required:
        - content
      properties:
        content:
          type: string

    UpdateScrapPostRequest:
      type: object
      required:
        - content
      properties:
        content:
          type: string

# Add to tags section:
  - name: Scraps
    description: Scrap (thread-based memo) management